@model FlightCast.Models.TravelResultsInfo

@{
    var groupedByYear = Model?.weatherRecords?.GroupBy(x => x.Date.Year)
    .OrderByDescending(g => g.Key)
    .ToList();
}

@if (Model == null || Model.weatherRecords == null || !Model.weatherRecords.Any())
{
    <p>No data found for selected period or location</p>
}
else
{
    <h2 class="mb-4 text-primary text-center">Weather in @Model.weatherRecords.FirstOrDefault()?.City</h2>

    <div class="container">
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var group in groupedByYear!)
            {
                var minDate = group.Min(x => x.Date);
                var maxDate = group.Max(x => x.Date);
                var avgMaxTemp = group.Average(x => x.MaxTemperature);
                var avgMinTemp = group.Average(x => x.MinTemperature);
                var avgTemp = group.Average(x => x.AverageTemperature);
                var collapseId = $"details{group.Key}";
                <div class="col">
                    <div class="card h-100 shadow-sm">
                        <div class="card-body">
                            <h5 class="card-title">@group.Key</h5>
                            <p class="mb-1">@minDate.ToString("MM.dd") – @maxDate.ToString("MM.dd")</p>
                            <ul class="list-unstyled small mb-3">
                                <li><strong>Avg Max Temp:</strong> @avgMaxTemp.ToString("0.0")°C</li>
                                <li><strong>Avg Min Temp:</strong> @avgMinTemp.ToString("0.0")°C</li>
                                <li><strong>Avg Temp:</strong> @avgTemp.ToString("0.0")°C</li>
                            </ul>

                            <button class="btn btn-sm btn-primary toggle-details-btn" type="button" data-bs-toggle="collapse"
                                data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId"
                                data-text-show="Show Details" data-text-hide="Collapse Details">
                                Show Details
                            </button>

                            <div class="collapse mt-3" id="@collapseId">
                                <div class="card card-body" style="max-height: 300px; overflow-y: auto;">
                                    @foreach (var item in group.OrderByDescending(x => x.Date))
                                    {
                                        <p class="mb-1">
                                            <strong>@item.Date.ToString("yyyy-MM-dd"):</strong>
                                            Max: @item.MaxTemperature&nbsp;°C,
                                            Min: @item.MinTemperature&nbsp;°C,
                                            Avg: @item.AverageTemperature&nbsp;°C
                                        </p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <h2 class="mt-5">Flight Offers</h2>
    <!-- Flight module -->

    <h2 class="mt-5">Attractions</h2>

    @if (Model.attractions != null && Model.attractions.Any())
{
    <div class="row">
        @foreach (var attraction in Model.attractions)
        {
            <div class="col-md-4 mb-4">
                <div class="card h-100">
                    @if (attraction.ImageUrls != null && attraction.ImageUrls.Any())
                    {
                        <img src="@attraction.ImageUrls[0]" class="card-img-top" alt="@attraction.Name"
                             style="max-height:200px; object-fit:cover;" />
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/400x200?text=No+Image" class="card-img-top" alt="No image available"
                             style="max-height:200px; object-fit:cover;" />
                    }

                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@attraction.Name</h5>

                        @if (attraction.Categories != null && attraction.Categories.Any())
                        {
                            <p class="card-text"><strong>Categories:</strong></p>
                            <ul>
                                @foreach (var cat in attraction.Categories)
                                {
                                    <li>
                                        @System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(
                                            cat.Replace(".", " ").Replace("_", " "))
                                    </li>
                                }
                            </ul>
                        }

                        @if (!string.IsNullOrEmpty(attraction.Description))
                        {
                            <p class="card-text">@attraction.Description</p>
                        }

                        @if (attraction.Popularity.HasValue)
                        {
                            <p class="card-text mt-auto"><strong>Popularity Score:</strong> @attraction.Popularity.Value.ToString("0")</p>
                        }

                        @if (!string.IsNullOrEmpty(attraction.Website))
                        {
                            <p class="card-text">
                                <strong>Website:</strong>
                                <a href="@attraction.Website" target="_blank" rel="noopener noreferrer">@attraction.Website</a>
                            </p>
                        }

                        @if (!string.IsNullOrEmpty(attraction.OpeningHours))
                        {
                            <p class="card-text"><strong>Opening Hours:</strong> @attraction.OpeningHours</p>
                        }

                        @if (attraction.Latitude.HasValue && attraction.Longitude.HasValue)
                        {
                            var lat = attraction.Latitude.Value;
                            var lon = attraction.Longitude.Value;
                            <p class="card-text">
                                <strong>Location:</strong>
                                <a href="https://www.google.com/maps?q=@lat,@lon" target="_blank" rel="noopener noreferrer">
                                    @lat.ToString("0.0000"), @lon.ToString("0.0000")
                                </a>
                            </p>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No attractions found.</p>
}

}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleButtons = document.querySelectorAll('.toggle-details-btn');

            toggleButtons.forEach(btn => {
                const targetSelector = btn.getAttribute('data-bs-target');
                const collapseEl = document.querySelector(targetSelector);

                collapseEl.addEventListener('show.bs.collapse', () => {
                    btn.textContent = btn.getAttribute('data-text-hide');
                });

                collapseEl.addEventListener('hide.bs.collapse', () => {
                    btn.textContent = btn.getAttribute('data-text-show');
                });
            });
        });
    </script>
}
